# Generated by Django 5.2.5 on 2025-09-02 20:54

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MiniMovePackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('package_type', models.CharField(choices=[('petite', 'Petite'), ('standard', 'Standard'), ('full', 'Full Move')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('base_price_cents', models.PositiveBigIntegerField()),
                ('max_items', models.PositiveIntegerField(blank=True, help_text='Maximum items allowed (null = unlimited for Full Move)', null=True)),
                ('max_weight_per_item_lbs', models.PositiveIntegerField(default=50)),
                ('coi_included', models.BooleanField(default=False)),
                ('coi_fee_cents', models.PositiveBigIntegerField(default=5000, help_text='COI fee in cents if not included')),
                ('priority_scheduling', models.BooleanField(default=False)),
                ('protective_wrapping', models.BooleanField(default=False)),
                ('is_most_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services_mini_move_package',
                'ordering': ['base_price_cents'],
            },
        ),
        migrations.CreateModel(
            name='SpecialtyItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item_type', models.CharField(choices=[('peloton', 'Peloton'), ('surfboard', 'Surfboard'), ('crib', 'Crib'), ('wardrobe_box', 'Wardrobe Box')], max_length=30, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price_cents', models.PositiveBigIntegerField()),
                ('requires_van_schedule', models.BooleanField(default=True, help_text='Can only be booked when van is already scheduled')),
                ('special_handling', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services_specialty_item',
            },
        ),
        migrations.CreateModel(
            name='StandardDeliveryConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price_per_item_cents', models.PositiveBigIntegerField(default=9500, help_text='Price per item in cents')),
                ('minimum_items', models.PositiveIntegerField(default=3, help_text='Minimum number of items for delivery')),
                ('minimum_charge_cents', models.PositiveBigIntegerField(default=28500, help_text='Minimum delivery charge in cents')),
                ('same_day_flat_rate_cents', models.PositiveBigIntegerField(default=36000, help_text='Flat rate for same-day delivery')),
                ('max_weight_per_item_lbs', models.PositiveIntegerField(default=50, help_text='Maximum weight per item in pounds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services_standard_delivery_config',
            },
        ),
        migrations.CreateModel(
            name='SurchargeRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('surcharge_type', models.CharField(choices=[('weekend', 'Weekend Surcharge'), ('holiday', 'Holiday Surcharge'), ('peak_date', 'Peak Date Surcharge')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('calculation_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount')], max_length=20)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage surcharge (e.g., 15.00 for 15%)', max_digits=5, null=True)),
                ('fixed_amount_cents', models.PositiveBigIntegerField(blank=True, help_text='Fixed surcharge amount in cents', null=True)),
                ('specific_date', models.DateField(blank=True, help_text='Specific date for peak date surcharges', null=True)),
                ('applies_saturday', models.BooleanField(default=False)),
                ('applies_sunday', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services_surcharge_rule',
            },
        ),
        migrations.CreateModel(
            name='VanSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('is_available', models.BooleanField(default=True, help_text='Van is available for pickups on this date')),
                ('mini_moves_booked', models.PositiveIntegerField(default=0)),
                ('specialty_items_booked', models.PositiveIntegerField(default=0)),
                ('max_capacity', models.PositiveIntegerField(default=10, help_text='Maximum bookings for this date')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about availability or restrictions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'services_van_schedule',
                'ordering': ['date'],
            },
        ),
    ]
